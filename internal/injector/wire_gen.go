// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/google/wire"
	"riz.it/nurul-faizah/internal/config"
	"riz.it/nurul-faizah/internal/delivery/controller"
	"riz.it/nurul-faizah/internal/delivery/route"
	"riz.it/nurul-faizah/internal/domain"
	"riz.it/nurul-faizah/internal/repository"
	"riz.it/nurul-faizah/internal/usecase"
)

// Injectors from injector.go:

func InitializedApp() *config.App {
	bootstrap := config.Get()
	app := config.NewFiber(bootstrap)
	logger := config.NewLogger(bootstrap)
	db := config.NewDatabase(bootstrap, logger)
	validate := config.NewValidator(bootstrap)
	userAccountRepository := repository.NewUserAccount(logger)
	jwtHelper := usecase.NewJWTHelperImpl(bootstrap)
	authUseCase := usecase.NewAuthUseCase(db, logger, validate, userAccountRepository, jwtHelper)
	authController := controller.NewAuthController(authUseCase, logger)
	routerConfig := route.NewRouter(app, authController)
	configApp := config.NewApp(routerConfig, bootstrap)
	return configApp
}

// injector.go:

var authSet = wire.NewSet(repository.NewUserAccount, wire.Bind(new(domain.UserAccountRepository), new(*repository.UserAccountRepository)), usecase.NewAuthUseCase, controller.NewAuthController)
